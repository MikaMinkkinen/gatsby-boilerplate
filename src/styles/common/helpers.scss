/**
 * Helpers
 *
 * Common / Helpers
 *
 * @since 1.0.0
 */

/**
 * Display Grid
 * @example: @include display-grid;
 * CSS Grid like this: https://css-tricks.com/snippets/css/complete-guide-grid/
 */
@mixin display-grid {
  display: grid;
  grid-template-columns: repeat(6, minmax(1rem, 1fr));
  grid-column-gap: 1rem;
  grid-row-gap: 1rem;
  @media screen and (min-width: map-get($grid-breakpoints, md)) {
    grid-template-columns: repeat(12, minmax(1rem, 1fr));
  }
}

/**
 * Grid Child
 * @example: @include grid-child(1,6,6,12)
 */
@mixin grid-child(
  $col-start: 1,
  $col-end: 12,
  $col-start-mobile: 1,
  $col-end-mobile: 12
) {
  -ms-grid-column: $col-start;
  -ms-grid-column-span: $col-end - $col-start;
  grid-column-start: $col-start;
  grid-column-end: $col-end;
  @media screen and (max-width: map-get($grid-breakpoints, md)) {
    grid-column-start: $col-start-mobile;
    grid-column-end: $col-end-mobile;
  }
}

/**
 * Responsive Ratio
 * @example: @include responsive-ratio(16,9);
 */
@mixin responsive-ratio($x, $y, $pseudo: false) {
  $padding: unquote(($y / $x) * 100 + "%");
  @if $pseudo {
    &:before {
      @include pseudo($pos: relative);
      width: 100%;
      padding-top: $padding;
    }
  } @else {
    padding-top: $padding;
  }
}
